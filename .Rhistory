x <- c(4,TRUE)
attributes(x)
y <- list(2,"a","b",TRUE)
y[[1]]
x <- 1:4
y <- 2
x+y
z <- X+y
z <- x + y
x <- c(17,14,4,5,13,12,10)
x[x>=11] <- 4
getwd()
cube <- function(x,n) {}
cube <- function(x,n) { x^3}
cube(3)
x <- 1:10
if(X>5)   {x <- 0}
y <- 7
if(y>5) {y <- 3}
y
x
y+z
z <- 10
f(3)
}
}
f <- function(x) {
g <- function(y) {
y+z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
p <- function(d) {
q <- function(e) {
e+f
}
f <- 4
d + q(d)
}
f <- 10
p(3)
x<- 5
y <- if(x<3) { NA} else {10)}
y <- if(x<3) {NA} else {10}
y
y <- 10
f <- function(x) { y <- 2   y^2 + g(x)}
f <- function(x) {
y <- 2
y^2 + g(x)
}
g <- function(x) {
x*y
}
f(3)
library(datasets)
data(iris)
?iris
virgin <- iris$species = "virginica"
iris
virgin <- iris$Species = "virginica"
virgin <- data.frame()
virgin <- iris$Species = "virginica"
virgin <- (iris$Species == "virginica")
good <- (iris$Species == "virginica")
virgin <- iris[good,]
mean_sl1 <- mean((virgin$Sepal.Length), na.rm=TRUE )
s1 <- split(iris, iris$Species)
lapply(s1, function(x), colMeans(x[,c("Sepal.Length", "Sepal.Width", "Pedal.Lenght", "Pedal.Width")]))
lapply(s1, function(x) colMeans(x[,c("Sepal.Length", "Sepal.Width", "Pedal.Lenght", "Pedal.Width")]))
lapply(s1, function(x) colMeans(x[,c("Sepal.Length", "Sepal.Width", "Pedal.Length", "Pedal.Width")]))
lapply(s1, function(x) colMeans(x[,c("Sepal.Length", "Sepal.Width", "Petal.Lenght", "Petal.Width")]))
lapply(s1, function(x) colMeans(x[ c("Sepal.Length", "Sepal.Width", "Pedal.Lenght", "Pedal.Width")]))
lapply(s1, function(x) colMeans(x))
lapply(s1, function(x) colMeans(x[,c("Sepal.Length")]))
sapply(s1, function(x) colMeans(x[,c("Sepal.Length", "Sepal.Width", "Pedal.Lenght", "Pedal.Width")]))
?colmeans
?colMeans
colmeans(s1)
colMeans(s1)
colMeans(s1 [, 2,3,4,5])
colMeans(s1 [, 2])
colMeans(s1 [, ,  2])
colMeans(s1 [,2,3])
iris3
lapply(s1,mean)
lapply(s1,(mean(s1$Speal.Length)))
lapply(s1,(mean(s1$Sepal.Length)))
apply(s1,(mean(s1$Speal.Length)))
head(airquality)
s <- split(airquality, airquality$Month)
lapply(s, function(x) colMeans(x, c(1,2,3)))
lapply(s, function(x) colMeans(x)
)
lapply(s, function(x) colMeans(x[1])
)
lapply(s, function(x) colMeans(x[1,2,3,4]))
lapply(s, function(x) colMeans(x[1])
)
lapply(s, function(x) colMeans(x[1]))
sapply(s, function(x) colMeans(x[1]))
lapply(s, function(x) colMeans(x[1], na.rm=TRUE))
sapply(s, function(x) colMeans(x[1], na.rm=TRUE))
sapply(s, function(x) colMeans(x[1][2], na.rm=TRUE))
sapply(s, function(x) colMeans(x[1, 2], na.rm=TRUE))
sapply(s, function(x) colMeans(x[2], na.rm=TRUE))
sapply(s, function(x) colMeans(x[1], x[2], na.rm=TRUE))
sapply(s, function(x) colMeans(x[1:2], na.rm=TRUE))
sapply(s1, function(x) colMeans(x[1:3], na.rm=TRUE))
apply(iris,1,mean)
apply(iris[,1:4],2,mean)
colMeans(iris)
apply(iris,2,mean)
data mtcars
data(mtcars)
?mtcars
with(mtcars, tapply(mpg, cyl, mean))
apply(mtcars,2,mean)
sapply(mtcars, cyl,mean)
mean(mtcars$mpg, mtcars$cyl)
with(mtcars(tapply(hp, cyl, mean)))
data mtcars
data(mtcars)
with(mtcars, tapply(hp, cyl, mean))
carsavg <- with(mtcars, tapply(hp, cyl, mean))
carsavg
carsavg[8]-carsavg[4]
carsavg[3] - carsavg[1]
dabug(ls)
debug(ls)
ls
debug(lm)
lm(y~x)
exit
clear
quit
exit
n1
1
2
3
.
112
q
console
exit
exit browse
help
help
q
Quit
help
Q
setwd("C:/Users/Jacq/ProgrammingAssignment2")
source cachemean.R
source cachemeanvector.R
source('C:/Users/Jacq/ProgrammingAssignment2/cachemeanvector.R')
pwd
pwd()
workdir()
cachemean(1,2,3,4,5)
v <- 1:5
v
cachemean(v)
makeVector(1:5)
cachemean
makeVector
cachemean(makeVector)
makeVector(12345)
cachemean
a <- makeVector(c(5,1,3))
a$get()
a <- makeVector(0:100)
cachemean(a)
cachemean(a)
a$get
a$get()
a$set()
a$set(4)
a$get()
a$set(0:200)
a$get()
cachemean(a)
cachemean(a)
attributes(a)
source('C:/Users/Jacq/ProgrammingAssignment2/cachematrix.R')
b <- makeCacheMatrix(1:6, nrow=2, ncol=3 )
b <- matrix(1:6, nrow=2, ncol=3)
makeCacheMatrix(b)
b <- makeCacheMatrix(1:2, 1:4)
makeCacheMatrix(1:10)
source('C:/Users/Jacq/ProgrammingAssignment2/cachematrix.R')
a <- nameCacheMatrix(matrix(c(2,4,3,1,5,7),nrow=2,ncol=3))
a <- makeCacheMatrix(matrix(c(2,4,3,1,5,7),nrow=2,ncol=3))
cacheSolve(a)
a <- nameCacheMatrix(matrix(c(2,4,3,1,5,7,6,2,8),nrow=3,ncol=3))
a <- makeCacheMatrix(matrix(c(2,4,3,1,5,7,6,2,8),nrow=3,ncol=3))
cacheSolve(a)
d <- makeCacheMatrix(matrix(c(1,2,3,4),nrow=2,ncol=2))
cacheSolve(d)
attributes(d)
cacheSolve(d)
source('C:/Users/Jacq/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/Jacq/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/Jacq/ProgrammingAssignment2/cachematrix.R')
d <- makeCacheMatrix(matrix(c(1,2,3,4),nrow=2,ncol=2))
cacheSolve(d)
source('C:/Users/Jacq/ProgrammingAssignment2/cachematrix.R')
